{"version":3,"file":"static/js/background.js","mappings":";;AAAAA,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAEC,OAAO,EAAK,CAChD,GAAIA,OAAO,CAACC,MAAM,GAAK,sBAAsB,CAAE,CAE7C;AACAL,MAAM,CAACM,IAAI,CAACC,KAAK,CAAC,CAACC,MAAM,CAAE,IAAI,CAAEC,aAAa,CAAE,IAAI,CAAC,CAAGH,IAAI,EAAK,CAC/D,KAAM,CAAAI,SAAS,CAAGJ,IAAI,CAAC,CAAC,CAAC,CACzBN,MAAM,CAACW,SAAS,CAACC,aAAa,CAAC,CAC7BC,MAAM,CAAE,CAACC,KAAK,CAAEJ,SAAS,CAACK,EAAE,CAAC,CAC7BC,KAAK,CAAE,CAAC,+BAA+B,CACzC,CAAC,CAAE,IAAM,CACP,GAAIhB,MAAM,CAACC,OAAO,CAACgB,SAAS,CAAE,CAC5BC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEnB,MAAM,CAACC,OAAO,CAACgB,SAAS,CAAC,CACrE,CAAC,IAAM,CACLjB,MAAM,CAACM,IAAI,CAACc,WAAW,CAACV,SAAS,CAACK,EAAE,CAAE,CAACV,MAAM,CAAE,kBAAkB,CAAC,CAAC,CACrE,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAEA,MAAO,KAAI,CACb,CAAC,CAAC,CAGF,GAAI,CAAAgB,aAAa,CACjB,GAAI,CAAAC,UAAU,CAAG,KAAK,CAEtBtB,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAEC,OAAO,EAAK,CAChD,GAAIA,OAAO,CAACmB,IAAI,GAAK,wBAAwB,CAAE,CAC7C,KAAM,CAAEC,IAAI,CAAEC,GAAI,CAAC,CAAGrB,OAAO,CAE7B,GAAIkB,UAAU,CAAC,CACb,OACF,CAEAA,UAAU,CAAG,IAAI,CAEjBI,KAAK,IAAAC,MAAA,CAAIC,8CAAiC,wBAAAD,MAAA,CAAsBI,kBAAkB,CAACN,GAAG,CAAC,CAAE,CAAC,CACvFO,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAI,CACZ,GAAIA,IAAI,CAACC,MAAM,CAAE,CACjB,CAAC,IAAM,CACLC,YAAY,CAAChB,aAAa,CAAC,CAE3BA,aAAa,CAAGiB,UAAU,CAAC,IAAM,CAC/BZ,KAAK,IAAAC,MAAA,CAAIC,8CAAiC,qBAAoB,CAC5DW,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEnB,IAAI,CAAEC,GAAI,CAAC,CACpC,CAAC,CAAC,CACCO,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAI,CACZjB,OAAO,CAAC0B,GAAG,CAAC,mBAAmB,CAAET,IAAI,CAACU,MAAM,CAAC,CAC/C,CAAC,CAAC,CACDC,KAAK,CAAC3B,KAAK,EAAI,CACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAChC,CAAC,CAAC,CACD4B,OAAO,CAAC,IAAM,CACbzB,UAAU,CAAG,KAAK,CACpB,CAAC,CAAC,CACN,CAAC,CAAE,IAAI,CAAC,CACV,CACF,CAAC,CAAC,CACDwB,KAAK,CAAC3B,KAAK,EAAI,CACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAChC,CAAC,CAAC,CACD4B,OAAO,CAAC,IAAM,CACbzB,UAAU,CAAG,KAAK,CACpB,CAAC,CAAC,CACN,CACF,CAAC,CAAC,C","sources":["webpack:///./src/background.js"],"sourcesContent":["chrome.runtime.onMessage.addListener((request) => {\n  if (request.action === 'EXTRACT_ARTICLE_TEXT') {\n\n    // Get the active tab and inject the extraction script\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n      const activeTab = tabs[0];\n      chrome.scripting.executeScript({\n        target: {tabId: activeTab.id},\n        files: ['static/js/extractionScript.js']\n      }, () => {\n        if (chrome.runtime.lastError) {\n          console.error('Failed to inject script:', chrome.runtime.lastError);\n        } else {\n          chrome.tabs.sendMessage(activeTab.id, {action: 'START_EXTRACTION'});\n        }\n      });\n    });\n  }\n\n  return true; \n});\n\n\nlet debounceTimer;\nlet isFetching = false;\n\nchrome.runtime.onMessage.addListener((request) => {\n  if (request.type === 'ARTICLE_TEXT_EXTRACTED') {\n    const { text, url } = request;\n\n    if (isFetching){\n      return;\n    }\n\n    isFetching = true;\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/website_check/${encodeURIComponent(url)}`)\n      .then(response => response.json())\n      .then(data => {\n        if (data.exists) {\n        } else {\n          clearTimeout(debounceTimer);\n\n          debounceTimer = setTimeout(() => {\n            fetch(`${process.env.REACT_APP_BACKEND_URL}/generate-topics`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ text, url })\n            })\n              .then(response => response.json())\n              .then(data => {\n                console.log('Generated Topics:', data.topics);\n              })\n              .catch(error => {\n                console.error('Error:', error);\n              })\n              .finally(() => {\n                isFetching = false;\n              });\n          }, 1000);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      })\n      .finally(() => {\n        isFetching = false;\n      });\n  }\n});\n\n"],"names":["chrome","runtime","onMessage","addListener","request","action","tabs","query","active","currentWindow","activeTab","scripting","executeScript","target","tabId","id","files","lastError","console","error","sendMessage","debounceTimer","isFetching","type","text","url","fetch","concat","process","env","REACT_APP_BACKEND_URL","encodeURIComponent","then","response","json","data","exists","clearTimeout","setTimeout","method","headers","body","JSON","stringify","log","topics","catch","finally"],"sourceRoot":""}